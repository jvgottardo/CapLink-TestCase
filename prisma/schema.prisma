generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart {
  cart_id    Int          @id @default(autoincrement())
  user_id    Int          @unique
  created_at DateTime?    @default(now()) @db.Timestamp(6)
  updated_at DateTime?    @default(now()) @db.Timestamp(6)
  users      users        @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  cart_items cart_items[]
}

model cart_items {
  cart_item_id Int       @id @default(autoincrement())
  cart_id      Int
  product_id   Int
  quantity     Int       @default(1)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  cart         cart      @relation(fields: [cart_id], references: [cart_id], onDelete: Cascade, onUpdate: NoAction)
  products     products  @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([cart_id, product_id])
}

model favorites {
  favorite_id Int       @id @default(autoincrement())
  user_id     Int
  product_id  Int
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  products    products  @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: NoAction)
  users       users     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, product_id])
}

model order_items {
  order_items_id Int      @id @default(autoincrement())
  order_id       Int
  product_id     Int
  quantity       Int
  price          Decimal  @db.Decimal(10, 2)
  orders         orders   @relation(fields: [order_id], references: [order_id], onDelete: Cascade, onUpdate: NoAction)
  products       products @relation(fields: [product_id], references: [product_id], onUpdate: NoAction)
}

model orders {
  order_id    Int           @id @default(autoincrement())
  user_id     Int
  total       Decimal       @db.Decimal(12, 2)
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  order_items order_items[]
  users       users         @relation(fields: [user_id], references: [user_id], onUpdate: NoAction)
}

model products {
  product_id   Int           @id @default(autoincrement())
  vendor_id    Int
  name         String        @db.VarChar(255)
  price        Decimal       @db.Decimal(10, 2)
  description  String?
  published_at DateTime?     @default(now()) @db.Timestamp(6)
  active       Boolean?      @default(true)
  created_at   DateTime?     @default(now()) @db.Timestamp(6)
  image_url    String?       @db.VarChar(255)
  brand        String?       @db.VarChar(255)
  quantity     Int?          @default(0)
  category     String?       @db.VarChar(255)
  cart_items   cart_items[]
  favorites    favorites[]
  order_items  order_items[]
  users        users         @relation(fields: [vendor_id], references: [user_id], onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model users {
  user_id    Int         @id @default(autoincrement())
  name       String      @db.VarChar(255)
  email      String      @unique @db.VarChar(255)
  password   String      @db.VarChar(255)
  role       String      @db.VarChar(20)
  active     Boolean?    @default(true)
  created_at DateTime?   @default(now()) @db.Timestamp(6)
  cart       cart?
  favorites  favorites[]
  orders     orders[]
  products   products[]
}
